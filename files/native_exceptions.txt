int START_NEW__WITH_ARGS(const char* scriptName, Any* args, int argCount, int stackSize)
int START_NEW__WITH_NAME_HASH_AND_ARGS(Hash scriptHash, Any* args, int argCount, int stackSize)
void INTERRUPT_CONVERSATION(Any p0, Any* p1, Any* p2)
Any _0xAA19F5572C38B564(Any* p0)
void SET_VARIABLE_ON_SOUND(int soundId, Any* p1, float p2)
void OVERRIDE_UNDER_STREAM(Any* p0, BOOL p1)
void PLAY_ANIMAL_VOCALIZATION(Ped pedHandle, Any p1, Any* p2)
BOOL _0xC64A06D939F826F5(float* p0, Any* p1, int* p2)
void SET_AMBIENT_ZONE_LIST_STATE(Any* p0, BOOL p1, BOOL p2)
void CLEAR_AMBIENT_ZONE_LIST_STATE(Any* p0, BOOL p1)
BOOL PREPARE_SYNCHRONIZED__EVENT_FOR_SCENE(Any p0, Any* p1)
void _0xC8EDE9BDBCCBA6D4(Any* p0, float p1, float p2, float p3)
void GET_POSIX_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second)
void GET_UTC_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second)
void GET_LOCAL_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second)
BOOL UGC_CREATE_CONTENT(Any* data, int dataCount, const char* contentName, const char* description, const char* tagsCsv, const char* contentTypeName, BOOL publish)
BOOL UGC_UPDATE_CONTENT(const char* contentId, Any* data, int dataCount, const char* contentName, const char* description, const char* tagsCsv, const char* contentTypeName)
void __VALUE_ADD_BOOLEAN(Any* objectData, const char* key, BOOL value)
void __VALUE_ADD_INTEGER(Any* objectData, const char* key, int value)
void __VALUE_ADD_FLOAT(Any* objectData, const char* key, float value)
void __VALUE_ADD_STRING(Any* objectData, const char* key, const char* value)
void __VALUE_ADD_VECTOR3(Any* objectData, const char* key, float valueX, float valueY, float valueZ)
Any* __VALUE_ADD_(Any* objectData, const char* key)
Any* __VALUE_ADD_ARRAY(Any* objectData, const char* key)
BOOL __VALUE_GET_BOOLEAN(Any* objectData, const char* key)
int __VALUE_GET_INTEGER(Any* objectData, const char* key)
float __VALUE_GET_FLOAT(Any* objectData, const char* key)
const char* __VALUE_GET_STRING(Any* objectData, const char* key)
Vector3 __VALUE_GET_VECTOR3(Any* objectData, const char* key)
Any* __VALUE_GET_(Any* objectData, const char* key)
Any* __VALUE_GET_ARRAY(Any* objectData, const char* key)
int __VALUE_GET_TYPE(Any* objectData, const char* key)
void _ARRAY_VALUE_ADD_BOOLEAN(Any* arrayData, BOOL value)
void _ARRAY_VALUE_ADD_INTEGER(Any* arrayData, int value)
void _ARRAY_VALUE_ADD_FLOAT(Any* arrayData, float value)
void _ARRAY_VALUE_ADD_STRING(Any* arrayData, const char* value)
void _ARRAY_VALUE_ADD_VECTOR3(Any* arrayData, float valueX, float valueY, float valueZ)
Any* _ARRAY_VALUE_ADD_(Any* arrayData)
BOOL _ARRAY_VALUE_GET_BOOLEAN(Any* arrayData, int arrayIndex)
int _ARRAY_VALUE_GET_INTEGER(Any* arrayData, int arrayIndex)
float _ARRAY_VALUE_GET_FLOAT(Any* arrayData, int arrayIndex)
const char* _ARRAY_VALUE_GET_STRING(Any* arrayData, int arrayIndex)
Vector3 _ARRAY_VALUE_GET_VECTOR3(Any* arrayData, int arrayIndex)
Any* _ARRAY_VALUE_GET_(Any* arrayData, int arrayIndex)
int _ARRAY_VALUE_GET_SIZE(Any* arrayData)
int _ARRAY_VALUE_GET_TYPE(Any* arrayData, int arrayIndex)
void GET__MATRIX(Entity entity, Vector3* rightVector, Vector3* forwardVector, Vector3* upVector, Vector3* position)
void GET__QUATERNION(Entity entity, float* x, float* y, float* z, float* w)
BOOL PLAY_SYNCHRONIZED_MAP__ANIM(float p0, float p1, float p2, float p3, Any p4, Any p5, Any* p6, Any* p7, float p8, float p9, Any p10, float p11)
BOOL FIND_ANIM_EVENT_PHASE(const char* animDictionary, const char* animName, const char* p2, Any* p3, Any* p4)
BOOL _GET_TATTOO_COLLECTION_DATA(int character, int index, Any* outComponent)
void INIT_SHOP__COMPONENT(Any* outComponent)
void INIT_SHOP__PROP(Any* outProp)
void GET_SHOP__QUERY_COMPONENT(int componentId, int* outComponent)
void GET_SHOP__COMPONENT(Hash componentHash, Any* outComponent)
void GET_SHOP__QUERY_PROP(Any p0, Any* p1)
void GET_SHOP__PROP(Hash componentHash, Any* outProp)
void GET_VARIANT_COMPONENT(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4)
void GET_FORCED_COMPONENT(Hash componentHash, int componentId, Hash* nameHash, int* enumValue, int* componentType)
void GET_FORCED_PROP(Any p0, Any p1, Any* p2, Any* p3, Any* p4)
void GET_SHOP__QUERY_OUTFIT(Any p0, Any* outfit)
void GET_SHOP__OUTFIT(Any p0, Any* p1)
BOOL GET_SHOP__OUTFIT_PROP_VARIANT(Any outfit, int slot, Any* item)
BOOL GET_SHOP__OUTFIT_COMPONENT_VARIANT(Any outfit, int slot, Any* item)
BOOL GET_DLC__DATA(int dlcVehicleIndex, int* outData)
BOOL GET_DLC__DATA(int dlcWeaponIndex, int* outData)
BOOL GET_DLC__COMPONENT_DATA(int dlcWeaponIndex, int dlcWeapCompIndex, int* ComponentDataPtr)
IRE BOOL GET_CLOSEST_FIRE_POS(Vector3* outPosition, float x, float y, float z)
BOOL _0x4862437A486F91B0(Any* p0, Any p1, Any p2, Any p3)
int _0x1670F8D05056F257(Any* p0)
void _GET__GFX_POSITION(float p0, float p1, float* p2, float* p3)
void GET_SCREEN_RESOLUTION(int* x, int* y)
void _GET_ACTIVE_SCREEN_RESOLUTION(int* x, int* y)
BOOL GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, float* screenY)
void SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int* scaleformHandle)
BOOL _0x632B2940C67F4EA9(int scaleformHandle, Any* p1, Any* p2, Any* p3)
void _THEFEED_ADD_TXD_REF(Any* p0, Any* p1, Any* p2, Any* p3)
int END_TEXT_COMMAND_THEFEED_POST_CREWTAG(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, int R, int G, int B)
int END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, const char* playerName, int R, int G, int B)
Any END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU(Any* p0, Any* p1, Any p2, Any* p3, Any* p4, Any p5, Any p6, Any p7)
void GET__COLOUR(int hudColorIndex, int* r, int* g, int* b, int* a)
void _0x817B86108EB94E51(BOOL p0, Any* p1, Any* p2, Any* p3, Any* p4, Any* p5, Any* p6, Any* p7, Any* p8)
BOOL GET__SCREEN_POSITION_FROM_WORLD_POSITION(float worldX, float worldY, float worldZ, float* screenX, float* screenY)
void SET_WARNING_MESSAGE_WITH_HEADER(const char* titleMsg, const char* p1, int flags, const char* promptMsg, BOOL p4, Any p5, Any* p6, Any* p7, BOOL showBg, Any p9)
void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS(const char* entryHeader, const char* entryLine1, Any instructionalKey, const char* entryLine2, BOOL p4, Any p5, Any p6, Any* p7, Any* p8, BOOL p9, Any p10)
void _SET_WARNING_MESSAGE_WITH_HEADER_UNK(const char* entryHeader, const char* entryLine1, int flags, const char* entryLine2, BOOL p4, Any p5, Any* p6, Any* p7, BOOL showBg, Any p9, Any p10)
BOOL _0xC8E1071177A23BE5(Any* p0, Any* p1, Any* p2)
void _0x36C1451A88A09630(Any* p0, Any* p1)
void _0x7E17BE53E1AAABAF(Any* p0, Any* p1, Any* p2)
BOOL _0xA238192F33110615(int* p0, int* p1, int* p2)
BOOL _0xEF4CED81CEBEDC6D(Any p0, Any* p1)
BOOL _0xCA6B2F7CE32AB653(Any p0, Any* p1, Any p2)
BOOL _0x90A6526CF0381030(Any p0, Any* p1, Any p2, Any p3)
BOOL _0x24A49BEAF468DC90(Any p0, Any* p1, Any p2, Any p3, Any p4)
BOOL _0x5FBD7095FE7AE57F(Any p0, float* p1)
BOOL _0x8F08017F9D7C47BD(Any p0, Any* p1, Any p2)
BOOL _0x052991E59076E4E4(Hash p0, Any* p1)
void _GET__INFO(Interior interior, Vector3* position, Hash* nameHash)
BOOL _GET_BASE_ELEMENT_METADATA(Any* p0, Any* p1, Any p2, BOOL p3)
void _GET_WEATHER_TYPE_TRANSITION(Hash* weatherType1, Hash* weatherType2, float* percentWeather2)
BOOL GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL unk, BOOL p5)
BOOL GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(float x, float y, float z, float* groundZ, Vector3* normal)
BOOL _0xF56DFB7B61BE7276(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float* p12)
void SET_BIT(int* address, int offset)
void CLEAR_BIT(int* address, int offset)
void SLERP_NEAR_QUATERNION(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float* p9, float* p10, float* p11, float* p12)
Any REGISTER_SAVE_HOUSE(float p0, float p1, float p2, float p3, Any* p4, Any p5, Any p6)
BOOL _0xA4A0065E39C9F25C(Vector3* p0, float* p1, BOOL* fadeInAfterLoad, BOOL* p3)
void GET_MODEL_DIMENSIONS(Hash modelHash, Vector3* minimum, Vector3* maximum)
BOOL STRING_TO_INT(const char* string, int* outInteger)
void SET_BITS_IN_RANGE(int* var, int rangeStart, int rangeEnd, int p3)
void START_SAVE_DATA(Any* p0, Any p1, BOOL p2)
void REGISTER_INT_TO_SAVE(Any* p0, const char* name)
void _REGISTER_INT64_TO_SAVE(Any* p0, const char* name)
void REGISTER_ENUM_TO_SAVE(Any* p0, const char* name)
void REGISTER_FLOAT_TO_SAVE(Any* p0, const char* name)
void REGISTER_BOOL_TO_SAVE(Any* p0, const char* name)
void REGISTER_TEXT_LABEL_TO_SAVE(Any* p0, const char* name)
void _REGISTER_TEXT_LABEL_TO_SAVE_2(Any* p0, const char* name)
void _0x48F069265A0E4BEC(Any* p0, const char* name)
void _0x8269816F6CFD40F8(Any* p0, const char* name)
void _0xFAA457EF263E8763(Any* p0, const char* name)
void START_SAVE_STRUCT_WITH_SIZE(Any* p0, int size, const char* structName)
void START_SAVE_ARRAY_WITH_SIZE(Any* p0, int size, const char* arrayName)
void _COPY_MEMORY(Any* dst, Any* src, int size)
BOOL CREATE_INCIDENT(int dispatchService, float x, float y, float z, int numUnits, float radius, int* outIncidentID, Any p7, Any p8)
BOOL CREATE_INCIDENT_WITH_(int dispatchService, Ped ped, int numUnits, float radius, int* outIncidentID, Any p5, Any p6)
BOOL FIND_SPAWN_POINT_IN_DIRECTION(float x1, float y1, float z1, float x2, float y2, float z2, float distance, Vector3* spawnPoint)
void DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(int p0, const char* windowTitle, Any* p2, const char* defaultText, const char* defaultConcat1, const char* defaultConcat2, const char* defaultConcat3, const char* defaultConcat4, const char* defaultConcat5, const char* defaultConcat6, const char* defaultConcat7, int maxInputLength)
BOOL _0x8EF5573A1F801A5C(Any p0, Any* p1, Any* p2)
void GET__PHONE_ROTATION(Vector3* rotation, Vehicle p1)
void GET__PHONE_POSITION(Vector3* position)
void _0xA2CCBE62CD4C91A4(int* toggle)
void GET__PHONE_RENDER_ID(int* renderId)
void _GIVE__JOBSHARE_CASH(int amount, int* networkHandle)
void _RECEIVE__JOBSHARE_CASH(int value, int* networkHandle)
BOOL _CAN_PAY_GOON(int p0, int p1, int amount, int* p3)
void _EARN_FROM_CHALLENGE_WIN(Any p0, Any* p1, BOOL p2)
void _EARN_FROM_BOUNTY(int amount, int* networkHandle, Any* p2, Any p3)
void _EARN_FROM_AMBIENT_JOB(int p0, const char* p1, Any* p2)
void _EARN_FROM_JOB_BONUS(Any p0, Any* p1, Any* p2)
BOOL __CAN_SPEND__2(Any p0, BOOL p1, BOOL p2, BOOL p3, Any* p4, Any p5, Any p6)
void _SPENT_BUY_WANTEDLEVEL(Any p0, Any* p1, BOOL p2, BOOL p3)
void _SPENT_PAY__INSURANCE_PREMIUM(int amount, Hash vehicleModel, int* networkHandle, BOOL notBankrupt, BOOL hasTheMoney)
void _SPENT_CALL_(Any p0, Any* p1, BOOL p2, BOOL p3)
const char* PROCESS_CASH_GIFT(int* p0, int* p1, const char* p2)
void __SPENT_PURCHASE_WAREHOUSE(int amount, Any* data, BOOL p2, BOOL p3)
void __SPENT_BUY_CASINO(int amount, BOOL p1, BOOL p2, Any* data)
void __SPENT_UPGRADE_CASINO(int amount, BOOL p1, BOOL p2, Any* data)
BOOL _NET_GAMESERVER_GET_CATALOG_STATE(int* state)
BOOL _0x0395CB47B022E62C(int* p0)
BOOL _0x170910093218C8B9(int* p0)
BOOL _0xC13C38E47EA5DF31(int* p0)
BOOL _NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA(int* p0, BOOL* p1)
BOOL NET_GAMESERVER_BASKET_START(int* transactionId, Hash categoryHash, Hash actionHash, int flags)
BOOL NET_GAMESERVER_BASKET_ADD_ITEM(Any* itemData, int quantity)
BOOL NET_GAMESERVER_BASKET_APPLY_SERVER_DATA(Any p0, Any* p1)
BOOL NET_GAMESERVER_BEGIN_SERVICE(int* transactionId, Hash categoryHash, Hash itemHash, Hash actionTypeHash, int value, int flags)
BOOL _CAN_ACCESS_MULTI(int* loadingState)
void _ADD_FOLLOWERS(int* p0, int p1)
void _GET_GLOBAL_MULTI_(int* hours, int* minutes, int* seconds)
BOOL _GET_FOUND_GAMER(Any* p0, Any p1)
BOOL __GET_GAMER_STATUS(Any* p0)
BOOL _GET_GAMER_STATUS_RESULT(Any* p0, Any p1)
void _SESSION_GET_INVITER(int* networkHandle)
void _SESSION_VOICE_CONNECT_TO_(Any* p0)
BOOL _SEND_TEXT_MESSAGE(const char* message, int* networkHandle)
BOOL _IS_ACTIVITY_SPECTATOR_FROM_HANDLE(int* networkHandle)
BOOL _DO_TRANSITION_QUICKMATCH_WITH_GROUP(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5, Any p6, Any p7)
void _SET_TRANSITION_CREATOR_HANDLE(Any* p0)
BOOL _INVITE_GAMERS_TO_TRANSITION(Any* p0, Any p1)
void _SET_GAMER_INVITED_TO_TRANSITION(int* networkHandle)
BOOL _DO_TRANSITION_TO_FREEMODE(Any* p0, Any p1, BOOL p2, int players, BOOL p4)
BOOL _DO_TRANSITION_TO_NEW_FREEMODE(Any* p0, Any* p1, int players, BOOL p3, BOOL p4, BOOL p5)
int _GET_TRANSITION_MEMBERS(Any* data, int dataCount)
BOOL _SEND_TRANSITION_GAMER_INSTRUCTION(int* networkHandle, const char* p1, int p2, int p3, BOOL p4)
BOOL _MARK_TRANSITION_GAMER_AS_FULLY_JOINED(Any* p0)
BOOL _IS_TRANSITION_HOST_FROM_HANDLE(int* networkHandle)
BOOL _GET_TRANSITION_HOST(int* networkHandle)
BOOL _HAS_INVITED_GAMER_TO_TRANSITION(Any* p0)
BOOL _0x3F9990BF5F22759C(Any* p0)
BOOL __SEND_PRESENCE_INVITE(int* networkHandle, Any* p1, Any p2, Any p3)
BOOL __SEND_PRESENCE_TRANSITION_INVITE(Any* p0, Any* p1, Any p2, Any p3)
BOOL _0x1171A97A3D3981B6(Any* p0, Any* p1, Any p2, Any p3)
BOOL _GET_PRESENCE_INVITE_HANDLE(Any p0, Any* p1)
void _REMOVE_TRANSITION_INVITE(Any* p0)
BOOL _INVITE_GAMERS(Any* p0, Any p1, Any* p2, Any* p3)
BOOL _HAS_INVITED_GAMER(Any* p0)
BOOL _0x71DC455F5CD1C2B1(Any* networkHandle)
BOOL _GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0)
BOOL _SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0)
void _SET_INVITE_ON_CALL_FOR_INVITE_MENU(Any* p0)
BOOL _CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE(Any p0, Any* p1)
void _0x0D77A82DC2D0DA59(Any* p0, Any* p1)
BOOL FILLOUT_PM__LIST(int* networkHandle, Any p1, Any p2)
BOOL FILLOUT_PM__LIST_WITH_NAMES(Any* p0, Any* p1, Any p2, Any p3)
BOOL _SET_CURRENT_DATA_MANAGER_HANDLE(Any* p0)
int _GET_PLATFORM_PARTY_MEMBERS(Any* data, int dataSize)
BOOL _IS_CHATTING_IN_PLATFORM_PARTY(int* networkHandle)
BOOL BAD_SPORT__LEFT_DETECTED(int* networkHandle, int event, int amountReceived)
void _REGISTER_HOST_BROADCAST_VARIABLES(int* vars, int numVars)
void _REGISTER__BROADCAST_VARIABLES(int* vars, int numVars)
int _GET_NUM__PARTICIPANTS(Any* p0, Any p1, Any p2)
BOOL _IS__A_PARTICIPANT_ON_(Player p0, Any* p1, Any p2)
void _GET_LOCAL_HANDLE(int* networkHandle, int bufferSize)
void _HANDLE_FROM_USER_ID(const char* userId, int* networkHandle, int bufferSize)
void _HANDLE_FROM_MEMBER_ID(const char* memberId, int* networkHandle, int bufferSize)
void _HANDLE_FROM_(Player player, int* networkHandle, int bufferSize)
Hash _HASH_FROM_GAMER_HANDLE(int* networkHandle)
void _HANDLE_FROM_FRIEND(int friendIndex, int* networkHandle, int bufferSize)
BOOL _GAMERTAG_FROM_HANDLE_START(int* networkHandle)
const char* _GET_GAMERTAG_FROM_HANDLE(int* networkHandle)
int _0xD66C9E72B3CC4982(Any* p0, Any p1)
BOOL _ARE_HANDLES_THE_SAME(int* netHandle1, int* netHandle2)
BOOL _IS_HANDLE_VALID(int* networkHandle, int bufferSize)
Player _GET__FROM_GAMER_HANDLE(int* networkHandle)
const char* _MEMBER_ID_FROM_GAMER_HANDLE(int* networkHandle)
BOOL _IS_GAMER_IN_MY_SESSION(int* networkHandle)
void _SHOW_PROFILE_UI(int* networkHandle)
const char* __GET_USERID(Player player, int* userID)
BOOL _IS_INACTIVE_PROFILE(Any* p0)
BOOL _IS_FRIEND_HANDLE_ONLINE(int* networkHandle)
BOOL _IS_FRIEND(int* networkHandle)
BOOL _ADD_FRIEND(int* networkHandle, const char* message)
BOOL _GAMER_HAS_HEADSET(Any* networkHandle)
BOOL _IS_GAMER_TALKING(Any* networkHandle)
BOOL __CAN_COMMUNICATE_WITH_GAMER_2(Any* networkHandle)
BOOL _CAN_COMMUNICATE_WITH_GAMER(Any* networkHandle)
BOOL _IS_GAMER_MUTED_BY_ME(Any* networkHandle)
BOOL _AM_I_MUTED_BY_GAMER(Any* networkHandle)
BOOL _IS_GAMER_BLOCKED_BY_ME(Any* networkHandle)
BOOL _AM_I_BLOCKED_BY_GAMER(Any* networkHandle)
BOOL _CAN_VIEW_GAMER_USER_CONTENT(Any* networkHandle)
BOOL _HAS_VIEW_GAMER_USER_CONTENT_RESULT(Any* networkHandle)
BOOL _CAN_PLAY_MULTI_WITH_GAMER(Any* networkHandle)
BOOL _CAN_GAMER_PLAY_MULTI_WITH_ME(Any* networkHandle)
void _0xADB57E5B663CCA8B(Player p0, float* p1, float* p2)
BOOL _CLAN__IS_ACTIVE(int* networkHandle)
BOOL _CLAN__GET_DESC(int* clanDesc, int bufferSize, int* networkHandle)
BOOL _CLAN_IS_ROCKSTAR_CLAN(int* clanDesc, int bufferSize)
void _CLAN_GET_UI_FORMATTED_TAG(int* clanDesc, int bufferSize, char* formattedTag)
BOOL _CLAN_GET_MEMBERSHIP_DESC(int* memberDesc, int p1)
BOOL _CLAN_DOWNLOAD_MEMBERSHIP(int* networkHandle)
BOOL _CLAN_DOWNLOAD_MEMBERSHIP_PENDING(Any* p0)
BOOL _CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(int* p0)
int _CLAN_GET_MEMBERSHIP_COUNT(int* p0)
BOOL _CLAN_GET_MEMBERSHIP_VALID(int* p0, Any p1)
BOOL _CLAN_GET_MEMBERSHIP(int* p0, int* clanMembership, int p2)
BOOL _CLAN_GET_EMBLEM_TXD_NAME(Any* netHandle, char* txdName)
BOOL _CLAN_IS_EMBLEM_READY(Any p0, Any* p1)
BOOL _GET_PRIMARY_CLAN_DATA_START(Any* p0, Any p1)
BOOL _GET_PRIMARY_CLAN_DATA_NEW(Any* p0, Any* p1)
void _GET_DATE_AND_TIME_FROM_UNIX_EPOCH(int unixEpoch, Any* timeStructure)
Any _QUERY_RESPAWN_RESULTS(Any* p0)
void _GET_RESPAWN_RESULT(int randomInt, Vector3* coordinates, float* heading)
BOOL _ACCESS_TUNABLE_INT(const char* tunableContext, const char* tunableName, int* value)
BOOL _ACCESS_TUNABLE_FLOAT(const char* tunableContext, const char* tunableName, float* value)
BOOL _ACCESS_TUNABLE_INT_HASH(Hash tunableContext, Hash tunableName, int* value)
BOOL __REGISTER_TUNABLE_INT_HASH(Hash contextHash, Hash nameHash, int* value)
BOOL _ACCESS_TUNABLE_FLOAT_HASH(Hash tunableContext, Hash tunableName, float* value)
BOOL __REGISTER_TUNABLE_FLOAT_HASH(Hash contextHash, Hash nameHash, float* value)
BOOL UGC_COPY_CONTENT(Any* p0, Any* p1)
BOOL UGC_QUERY_MY_CONTENT(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5)
BOOL _0x692D58DF40657E8C(Any p0, Any p1, Any p2, Any* p3, Any p4, BOOL p5)
BOOL UGC_QUERY_BY_CONTENT_IDS(Any* data, int count, BOOL latestVersion, const char* contentTypeName)
BOOL UGC_GET_BOOKMARKED_CONTENT(Any p0, Any p1, Any* p2, Any* p3)
BOOL UGC_GET_MY_CONTENT(Any p0, Any p1, Any* p2, Any* p3)
BOOL UGC_GET_FRIEND_CONTENT(Any p0, Any p1, Any* p2, Any* p3)
BOOL UGC_GET_CREW_CONTENT(Any p0, Any p1, Any p2, Any* p3, Any* p4)
BOOL UGC_GET_GET_BY_CATEGORY(Any p0, Any p1, Any p2, Any* p3, Any* p4)
BOOL SET_BALANCE_ADD_MACHINES(Any* data, int dataCount, const char* contentTypeName)
BOOL _0xA7862BC5ED1DFD7E(Any p0, Any p1, Any* p2, Any* p3)
BOOL _0x97A770BEEF227E2B(Any p0, Any p1, Any* p2, Any* p3)
BOOL _0x5324A0E3E4CE3570(Any p0, Any p1, Any* p2, Any* p3)
BOOL _0x584770794D758C18(Any p0, Any* p1)
void UGC_GET_CONTENT_UPDATED_DATE(Any p0, Any* p1)
BOOL UGC_SET_DELETED(Any* p0, BOOL p1, Any* p2)
BOOL _0xB746D20B17F2A229(Any* p0, Any* p1)
int TEXTURE_DOWNLOAD_REQUEST(int* PlayerHandle, const char* FilePath, const char* Name, BOOL p3)
Any _0x0B203B4AFDE53A4F(Any* p0, Any* p1, BOOL p2)
Any UGC_TEXTURE_DOWNLOAD_REQUEST(Any* p0, Any p1, Any p2, Any p3, Any* p4, BOOL p5)
BOOL _HAS_ROS_PRIVILEGE_END_DATE(int privilege, int* type, Any* endData)
Any GET_COORDS_AND_ROTATION_OF_CLOSEST__OF_TYPE(Object object, float radius, Hash modelHash, float x, float y, float z, Vector3* p6, int p7)
void GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL* locked, float* heading)
BOOL DOOR__FIND_EXISTING_DOOR(float p0, float p1, float p2, Any p3, Any* p4)
BOOL GET_SAFE_COORD_FOR_(float x, float y, float z, BOOL onGround, Vector3* outPosition, int flags)
BOOL GET_CLOSEST__NODE(float x, float y, float z, Vector3* outPosition, int nodeType, float p5, float p6)
BOOL GET_CLOSEST_MAJOR__NODE(float x, float y, float z, Vector3* outPosition, float unknown1, int unknown2)
BOOL GET_CLOSEST__NODE_WITH_HEADING(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, int p7)
BOOL GET_NTH_CLOSEST__NODE(float x, float y, float z, int nthClosest, Vector3* outPosition, Any unknown1, Any unknown2, Any unknown3)
BOOL GET_NTH_CLOSEST__NODE_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* heading, Any* unknown1, int unknown2, float unknown3, float unknown4)
BOOL GET_NTH_CLOSEST__NODE_ID_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float outHeading, Any p6, float p7, float p8)
BOOL GET_NTH_CLOSEST__NODE_FAVOUR_DIRECTION(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodetype, Any p10, Any p11)
BOOL GET__NODE_PROPERTIES(float x, float y, float z, int* density, int* flags)
void GET__NODE_POSITION(int nodeId, Vector3* outPosition)
Any GET_CLOSEST_ROAD(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7, Any* p8, float* p9, BOOL p10)
BOOL GET_RANDOM__NODE(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, Vector3* outPosition, int* nodeId)
int GENERATE_DIRECTIONS_TO_COORD(float x, float y, float z, BOOL p3, int* direction, float* p5, float* distToNxJunction)
BOOL GET__LAST_DAMAGE_BONE(Ped ped, int* outBone)
void GET__PARACHUTE_TINT_INDEX(Ped ped, int* outTintIndex)
void GET_GROUP_SIZE(int groupID, Any* unknown, int* sizeInMembers)
BOOL _0x9E30E91FB03A2CAF(Any* p0, Any* p1)
BOOL GET__HEAD_BLEND_DATA(Ped ped, Any* headBlendData)
void _GET__HAIR_RGB_COLOR(int p0, int* r, int* g, int* b)
void _GET__MAKEUP_RGB_COLOR(int p0, int* r, int* g, int* b)
void APPLY__BLOOD_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any* p4)
void APPLY__BLOOD_SPECIFIC(Ped ped, Any p1, float p2, float p3, float p4, float p5, Any p6, float p7, Any* p8)
BOOL _0x9C6A6C19B6C0C496(Ped ped, int* p1)
BOOL _0x2DFC81C9B9608549(Ped ped, int* p1)
BOOL _0xF60165E1D2C5370B(Ped ped, Any* p1, Any* p2)
int GET__NEARBY_S(Ped ped, int* sizeAndVehs)
int GET__NEARBY_S(Ped ped, int* sizeAndPeds, int ignore)
void _0x280C7E3AC7F56E90(Any p0, Any* p1, Any* p2, Any* p3)
void _0xB782F8238512BAD5(Any p0, Any* p1)
int ADD_ROPE(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float p10, BOOL p11, BOOL p12, BOOL rigid, float p14, BOOL breakWhenShot, Any* unkPtr)
void DELETE_ROPE(int* ropeId)
BOOL DOES_ROPE_EXIST(int* ropeId)
void ROPE_DRAW_SHADOW_ENABLED(int* ropeId, BOOL toggle)
void ATTACH_ENTITIES_TO_ROPE(int ropeId, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, BOOL p10, BOOL p11, Any* p12, Any* p13)
BOOL _0x84DE3B5FB3E666F0(int* ropeId)
void GET__RGB_COLOUR(Player player, int* r, int* g, int* b)
void SET__WANTED_CENTRE_POSITION(Player player, Vector3* position, BOOL p2, BOOL p3)
void GET__PARACHUTE_TINT_INDEX(Player player, int* tintIndex)
void GET__RESERVE_PARACHUTE_TINT_INDEX(Player player, int* index)
void GET__PARACHUTE_PACK_TINT_INDEX(Player player, int* tintIndex)
void GET__PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int* r, int* g, int* b)
BOOL GET_EVENT_DATA(int eventGroup, int eventIndex, int* argStruct, int argStructSize)
void TRIGGER__EVENT(int eventGroup, int* args, int argCount, int bit)
void _TRIGGER__EVENT_2(int eventGroup, int* args, int argCount, int bit)
int _START_SHAPE_TEST_SURROUNDING_COORDS(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2)
int GET_SHAPE_TEST_RESULT(int rayHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit)
int GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(int rayHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit)
BOOL SC_INBOX_MESSAGE_GET_DATA_INT(int p0, const char* context, int* out)
BOOL SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, const char* context, char* out)
void _SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST(int* networkHandle)
void _SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT(Any* data)
BOOL SC_INBOX_MESSAGE_GET_UGCDATA(Any p0, Any* p1)
BOOL _SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT(Any* data)
BOOL _SC_INBOX_MESSAGE_GET_BOUNTY_DATA(int index, Any* outData)
BOOL _0x4737980E8A283806(int p0, Any* p1)
void _0x44ACA259D67651DB(Any* p0, Any p1)
void SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(int* networkHandle)
BOOL _0x287F1F75D2803595(Any p0, Any* p1)
BOOL SC_PROFANITY_CHECK_STRING(const char* string, int* token)
BOOL _SC_PROFANITY_CHECK_UGC_STRING(const char* string, int* token)
BOOL _0xF6BAAAF762E1BF40(const char* p0, int* p1)
BOOL _0xD0EE05FE193646EA(Any* p0, Any* p1, Any* p2)
BOOL _0x1989C6E6F67E76A8(Any* p0, Any* p1, Any* p2)
BOOL _0x0F73393BAC7E6730(Any* p0, int* p1)
Any _0x4A7D6E727F941747(Any* p0)
BOOL _0x8CC469AB4D349B7C(int p0, const char* p1, Any* p2)
BOOL _0x699E4A5C8C893A18(int p0, const char* p1, Any* p2)
BOOL _0x19853B5B17D77BCA(Any p0, Any* p1)
BOOL _0x92DA6E70EF249BD1(const char* p0, int* p1)
BOOL _0x225798743970412B(int* p0)
BOOL STAT_SET_DATE(Hash statName, Any* value, int numFields, BOOL save)
BOOL STAT_GET_INT(Hash statHash, int* outValue, int p2)
BOOL STAT_GET_FLOAT(Hash statHash, float* outValue, Any p2)
BOOL STAT_GET_DATE(Hash statHash, Any* p1, Any p2, Any p3)
BOOL STAT_GET_POS(Any p0, Any* p1, Any* p2, Any* p3, Any p4)
BOOL STAT_GET_MASKED_INT(Any p0, Any* p1, Any p2, Any p3, Any p4)
BOOL _0xBED9F5693F34ED17(Hash statName, int p1, float* outValue)
void PLAY_NPC_INVITE(Any* p0)
void PLAY_MISSION_STARTED(Any* p0, Any p1, Any p2, BOOL p3)
void PLAY_MISSION_OVER(Any* p0, Any p1, Any p2, BOOL p3, BOOL p4, BOOL p5)
void PLAY_MISSION_CHECKPOINT(Any* p0, Any p1, Any p2, Any p3)
BOOL _0x6DEE77AFF8C21BD1(int* playerAccountId, int* posixTime)
void _0xF8C54A461C3E11DC(Any* p0, Any* p1, Any* p2, Any* p3)
void _0xF5BB8DAC426A52C0(Any* p0, Any* p1, Any* p2, Any* p3)
void _0xA736CF7FB7C5BFF4(Any* p0, Any* p1, Any* p2, Any* p3)
void _0x14E0B2D1AD1044E0(Any* p0, Any* p1, Any* p2, Any* p3)
void _PLAY_DIRECTOR_MODE(Any* p0)
void _PLAY_PI_MENU_HIDE_SETTINGS(Any* data)
BOOL LEADERBOARDS2_READ_FRIENDS_BY_ROW(Any* p0, Any* p1, Any p2, BOOL p3, Any p4, Any p5)
BOOL LEADERBOARDS2_READ_BY_HANDLE(Any* p0, Any* p1)
BOOL LEADERBOARDS2_READ_BY_ROW(Any* p0, Any* p1, Any p2, Any* p3, Any p4, Any* p5, Any p6)
BOOL LEADERBOARDS2_READ_BY_RANK(Any* p0, Any p1, Any p2)
BOOL LEADERBOARDS2_READ_BY_RADIUS(Any* p0, Any p1, Any* p2)
BOOL LEADERBOARDS2_READ_BY_SCORE_INT(Any* p0, Any p1, Any p2)
BOOL LEADERBOARDS2_READ_BY_SCORE_FLOAT(Any* p0, float p1, Any p2)
BOOL LEADERBOARDS2_READ_RANK_PREDICTION(Any* p0, Any* p1, Any* p2)
BOOL _LEADERBOARDS2_READ_BY_PLATFORM(Any* p0, const char* gamerHandleCsv, const char* platformName)
BOOL _0xA0F93D5465B3094D(Any* p0)
BOOL _0x34770B9CE0E03B91(Any p0, Any* p1)
BOOL LEADERBOARDS2_WRITE_DATA(Any* p0)
BOOL LEADERBOARDS_CACHE_DATA_ROW(Any* p0)
BOOL LEADERBOARDS_GET_CACHE_DATA_ROW(Any p0, Any p1, Any* p2)
void _0x6483C25849031C4F(Any p0, Any p1, Any p2, Any* p3)
BOOL LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE(Any* p0, Any* p1)
Any _0xDEAAF77EB3687E97(Any p0, Any* p1)
int STAT_GET_SAVE_MIGRATION_STATUS(Any* data)
int _STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS(int* p0)
void _PLAY_DUPE_DETECTION(Any* data)
void _PLAY_GUNRUN_MISSION_ENDED(Any* data)
void _PLAY_STONE_HATCHET_END(Any* data)
void _PLAY_SMUG_MISSION_ENDED(Any* data)
void _PLAY_H2_FMPREP_END(Any* data)
void _PLAY_H2_INSTANCE_END(Any* data, Any p1, Any p2, Any p3)
void _PLAY_DAR_MISSION_END(Any* data)
void _PLAY_ENTER_SESSION_PACK(Any* data)
void _PLAY_ARENA_WARS_ENDED(Any* data)
void _PLAY_CASINO_MISSION_ENDED(Any* data)
Any GET_NAVMESH_ROUTE_DISTANCE_REMAINING(Ped ped, Any* p1, Any* p2)
void _ED_ANIMATION(Ped ped, Any* p1, Any* p2, Any* p3, float p4, float p5)
void PLAY__ED_ANIM(Any p0, Any* p1, Any* p2, Any* p3, float p4, float p5)
void OPEN_SEQUENCE_(int* taskSequenceId)
void CLEAR_SEQUENCE_(int* taskSequenceId)
BOOL DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(float p0, float p1, float p2, Any* p3, float p4, BOOL p5)
BOOL WAYPOINT_RECORDING_GET_NUM_POINTS(const char* name, int* points)
BOOL WAYPOINT_RECORDING_GET_COORD(const char* name, int point, Vector3* coord)
BOOL WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(const char* name, float x, float y, float z, int* point)
void USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(Any* p0, BOOL p1, float p2, float p3)
void __MOVE__BY_NAME_WITH_INIT_PARAMS(Ped ped, const char* p1, Any* data, float p3, BOOL p4, const char* animDict, int flags)
void _SWEEP_AIM_POSITION(Any p0, Any* p1, Any* p2, Any* p3, Any* p4, Any p5, float p6, float p7, float p8, float p9, float p10)
void GET__CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b)
void GET__CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b)
void GET__COLOURS(Vehicle vehicle, int* colorPrimary, int* colorSecondary)
BOOL HAS__RECORDING_BEEN_LOADED(Any p0, Any* p1)
void REMOVE__RECORDING(Any p0, Any* p1)
Vector3 GET_ROTATION_OF__RECORDING_AT_TIME(Any p0, float p1, Any* p2)
void START_PLAYBACK_RECORDED__USING_AI(Any p0, Any p1, Any* p2, float p3, Any p4)
void GET_RANDOM__MODEL_IN_MEMORY(BOOL p0, Hash* modelHash, int* successIndicator)
void GET__EXTRA_COLOURS(Vehicle vehicle, int* pearlescentColor, int* wheelColor)
void _GET___COLOR(Vehicle vehicle, int* color)
void _GET__DASHBOARD_COLOR(Vehicle vehicle, int* color)
BOOL _0xA4822F1CF23F4810(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8)
void GET__MOD_COLOR_1(Vehicle vehicle, int* paintType, int* color, int* p3)
void GET__MOD_COLOR_2(Vehicle vehicle, int* paintType, int* color)
void GET__TYRE_SMOKE_COLOR(Vehicle vehicle, int* r, int* g, int* b)
void GET__COLOR(Vehicle vehicle, int* r, int* g, int* b)
void _GET__NEON_LIGHTS_COLOUR(Vehicle vehicle, int* r, int* g, int* b)
void _GET__SUSPENSION_BOUNDS(Vehicle vehicle, Vector3* out1, Vector3* out2)
int _GET_ALL_S(int* vehsStruct)
BOOL GET__HEIGHT(float x, float y, float z, float* height)
BOOL GET__HEIGHT_NO_WAVES(float x, float y, float z, float* height)
BOOL TEST_PROBE_AGAINST_(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result)
BOOL TEST_VERTICAL_PROBE_AGAINST_ALL_(float x, float y, float z, Any p3, float* height)
BOOL GET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int* ammo)
BOOL GET_MAX_AMMO(Ped ped, Hash weaponHash, int* ammo)
BOOL _GET_MAX_AMMO_2(Ped ped, Hash weaponHash, int* ammo)
BOOL GET__LAST__IMPACT_COORD(Ped ped, Vector3* coords)
BOOL GET___(Hash weaponHash, Any* outData)
BOOL GET__COMPONENT__(Hash componentHash, int* outData)
